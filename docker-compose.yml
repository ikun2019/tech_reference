services:
  traefik:
    image: traefik:v3.0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
  client:
    platform: linux/amd64
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_SUPABASE_URL: ${NEXT_PUBLIC_SUPABASE_URL}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${NEXT_PUBLIC_SUPABASE_ANON_KEY}
        NEXT_PUBLIC_SERVER_CLIENT_URL: ${NEXT_PUBLIC_SERVER_CLIENT_URL}
    env_file:
      - .client.env
  gateway:
    platform: linux/amd64
    build:
      context: ./gateway
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gateway.rule=PathPrefix(`/api`)"
      - "traefik.http.routers.gateway.entrypoints=web"
      - "traefik.http.services.gateway.loadbalancer.server.port=8000"
    env_file:
      - .gateway.env
    depends_on:
      - content-sync_service
      - content-api_service
      - coupon_service
  content-sync_service:
    platform: linux/amd64
    build:
      context: ./services/content-sync_service
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=false"
    # ports:
    #   - "8010:8010"
    env_file:
      - .content-sync.env
  content-api_service:
    platform: linux/amd64
    build:
      context: ./services/content-api_service
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=false"
    # ports:
    #   - "8020:8020"
    env_file:
      - .content-api.env
  coupon_service:
    platform: linux/amd64
    build:
      context: ./services/coupon_service
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=false"
    # ports:
    #   - "8030:8030"
    env_file:
      - .coupon.env
  redis:
    image: redis:7.2
    labels:
      - "traefik.enable=false"
    # ports:
    #   - "6379:6379"
