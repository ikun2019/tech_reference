services:
  traefik:
    command:
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--providers.docker=true"
      - "--providers.docker.exposedByDefault=false"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=0215.miyatto@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--ping=true"
      - "--ping.entryPoint=web"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./letsencrypt:/letsencrypt
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:80/ping"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s
  client:
    image: miyatto/techreference-client:latest
    labels:
      - "traefik.enable=true"
      # ホストマシン確認用
      - "traefik.http.routers.client.rule=PathPrefix(`/`)"
      - "traefik.http.routers.client-http.entrypoints=web"
      - "traefik.http.services.client.loadbalancer.server.port=3000"
      # https設定
      # - "traefik.http.routers.client.rule=PathPrefix(`/`)"
      # - "traefik.http.routers.client.entrypoints=websecure"
      # - "traefik.http.routers.client.tls.certresolver=myresolver"
      # 自動リダイレクト
      # - "traefik.http.routers.client-http.rule=PathPrefix(`/`)"
      # - "traefik.http.routers.client-http.entrypoints=web"
      # - "traefik.http.routers.client-http.middlewares=redirect-to-https"
      # - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    restart: unless-stopped
    env_file:
      - .env.prod
  gateway:
    image: miyatto/techreference-gateway:latest
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gateway.rule=PathPrefix(`/api`)"
      - "traefik.http.routers.gateway.entrypoints=web,websecure"
      - "traefik.http.services.gateway.loadbalancer.server.port=8000"
      - "traefik.http.routers.gateway.tls.certresolver=myresolver"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "scripts/healthcheck.js"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s
    env_file:
      - .env.prod
  content-sync_service:
    image: miyatto/techreference-content-sync_service:latest
    labels:
      - "traefik.enable=false"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "scripts/healthcheck.js"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s
    env_file:
      - .env.prod
  content-api_service:
    image: miyatto/techreference-content-api_service:latest
    labels:
      - "traefik.enable=false"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "scripts/healthcheck.js"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s
    env_file:
      - .env.prod
  coupon_service:
    image: miyatto/techreference-coupon_service:latest
    labels:
      - "traefik.enable=false"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "scripts/healthcheck.js"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s
    env_file:
      - .env.prod
  redis:
    labels:
      - "traefik.enable=false"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s
